"""
PDF to Word Converter Application using Streamlit
"""
import streamlit as st
import io
import os
from utils.pdf_validator import validate_pdf_file, get_pdf_info
from utils.pdf_converter import convert_pdf_to_docx, estimate_conversion_time, get_output_filename

# Page configuration
st.set_page_config(
    page_title="ูุญูู PDF ุฅูู Word",
    page_icon="๐",
    layout="wide",
    initial_sidebar_state="collapsed"
)

def main():
    """Main application function"""
    
    # Application header
    st.title("๐ ูุญูู PDF ุฅูู Word")
    st.markdown("---")
    
    # Application description
    st.markdown("""
    ### ูุฑุญุจุงู ุจู ูู ุฃุฏุงุฉ ุชุญููู PDF ุฅูู Word
    
    ูุฐู ุงูุฃุฏุงุฉ ุชุณูุญ ูู ุจุชุญููู ูููุงุช PDF ุฅูู ูุณุชูุฏุงุช Word (DOCX) ุจุณูููุฉ ูุฃูุงู.
    
    **ุงูููุฒุงุช:**
    - โ ุชุญููู ุณุฑูุน ูุขูู
    - โ ุงูุชุญูู ูู ุตุญุฉ ุงููููุงุช
    - โ ุฏุนู ุงููููุงุช ุงููุจูุฑุฉ
    - โ ูุนุงููุฉ ูุนูููุงุช ุงูููู
    """)
    
    st.markdown("---")
    
    # File upload section
    st.subheader("๐ ุฑูุน ููู PDF")
    
    uploaded_file = st.file_uploader(
        "ุงุฎุชุฑ ููู PDF ููุชุญููู",
        type=['pdf'],
        help="ุงูุญุฏ ุงูุฃูุตู ูุญุฌู ุงูููู: 200 ููุฌุงุจุงูุช"
    )
    
    if uploaded_file is not None:
        # Display file information
        file_size_mb = len(uploaded_file.getvalue()) / (1024 * 1024)
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.info(f"**ุงุณู ุงูููู:** {uploaded_file.name}")
            st.info(f"**ุญุฌู ุงูููู:** {file_size_mb:.2f} ููุฌุงุจุงูุช")
        
        # Validate file size
        if file_size_mb > 200:
            st.error("โ ุญุฌู ุงูููู ูุจูุฑ ุฌุฏุงู. ุงูุญุฏ ุงูุฃูุตู ุงููุณููุญ: 200 ููุฌุงุจุงูุช")
            return
            
        # Validate PDF file
        st.subheader("๐ ุงูุชุญูู ูู ุตุญุฉ ุงูููู")
        
        with st.spinner("ุฌุงุฑู ุงูุชุญูู ูู ุตุญุฉ ููู PDF..."):
            file_bytes = uploaded_file.getvalue()
            is_valid, error_message, page_count = validate_pdf_file(file_bytes)
        
        if not is_valid:
            st.error(f"โ {error_message}")
            return
            
        # Display PDF information
        st.success(f"โ ููู PDF ุตุญูุญ - ูุญุชูู ุนูู {page_count} ุตูุญุฉ")
        
        # Get additional PDF info
        pdf_info = get_pdf_info(file_bytes)
        
        with col2:
            if pdf_info and pdf_info.get('title'): # ุชุฃูุฏ ุฃู pdf_info ููุณ None
                st.info(f"**ุงูุนููุงู:** {pdf_info['title']}")
            if pdf_info and pdf_info.get('author'): # ุชุฃูุฏ ุฃู pdf_info ููุณ None
                st.info(f"**ุงููุคูู:** {pdf_info['author']}")
                
        # Estimate conversion time
        estimated_time = estimate_conversion_time(page_count)
        st.info(f"โฑ๏ธ **ุงูููุช ุงููุชููุน ููุชุญููู:** {estimated_time}")
        
        st.markdown("---")
        
        # Conversion section
        st.subheader("๐ ุชุญููู ุงูููู")
        
        if st.button("๐ ุจุฏุก ุงูุชุญููู", type="primary", use_container_width=True):
            
            # Progress tracking
            progress_bar = st.progress(0)
            status_text = st.empty()
            
            try:
                # Update progress
                progress_bar.progress(25)
                status_text.text("ุฌุงุฑู ุชุญุถูุฑ ุงูููู ููุชุญููู...")
                
                # Convert PDF to DOCX
                # ุชูุฑูุฑ BytesIO object ุจุฏูุงู ูู ุงููุณุงุฑ
                success, docx_bytes, error_message = convert_pdf_to_docx(
                    file_bytes, 
                    uploaded_file.name # ุชูุฑูุฑ ุงุณู ุงูููู ุงูุฃุตูู
                )
                
                progress_bar.progress(75)
                status_text.text("ุฌุงุฑู ุฅููุงุก ุนูููุฉ ุงูุชุญููู...")
                
                if success and docx_bytes:
                    progress_bar.progress(100)
                    status_text.text("ุชู ุงูุชุญููู ุจูุฌุงุญ! โ")
                    
                    # Success message
                    st.success("๐ ุชู ุชุญููู ุงูููู ุจูุฌุงุญ!")
                    
                    # Generate output filename
                    output_filename = get_output_filename(uploaded_file.name)
                    
                    # Download button
                    st.download_button(
                        label="๐ฅ ุชุญููู ููู Word",
                        data=docx_bytes,
                        file_name=output_filename,
                        mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                        type="primary",
                        use_container_width=True
                    )
                    
                    # Additional information
                    st.info(f"๐ **ุงุณู ุงูููู ุงููุญูู:** {output_filename}")
                    st.info(f"๐ **ุญุฌู ุงูููู ุงููุญูู:** {len(docx_bytes) / (1024 * 1024):.2f} ููุฌุงุจุงูุช")
                    
                else:
                    progress_bar.empty()
                    status_text.empty()
                    st.error(f"โ ูุดู ูู ุชุญููู ุงูููู: {error_message}")
                    
            except Exception as e:
                progress_bar.empty()
                status_text.empty()
                st.error(f"โ ุญุฏุซ ุฎุทุฃ ุบูุฑ ูุชููุน: {str(e)}")
                
    else:
        # Instructions when no file is uploaded
        st.info("๐ ูุฑุฌู ุฑูุน ููู PDF ูุจุฏุก ุนูููุฉ ุงูุชุญููู")
        
        # Additional help section
        with st.expander("๐ก ูุตุงุฆุญ ููุงุณุชุฎุฏุงู"):
            st.markdown("""
            **ููุญุตูู ุนูู ุฃูุถู ุงููุชุงุฆุฌ:**
            
            1. **ุฌูุฏุฉ ุงูููู:** ุชุฃูุฏ ูู ุฃู ููู PDF ุบูุฑ ุชุงูู ููุงุจู ูููุฑุงุกุฉ
            2. **ุญุฌู ุงูููู:** ุงููููุงุช ุงูุฃุตุบุฑ ุชุชุญูู ุจุดูู ุฃุณุฑุน
            3. **ููุน ุงููุญุชูู:** ุงููุตูุต ุงูุนุงุฏูุฉ ุชุชุญูู ุจุดูู ุฃูุถู ูู ุงูุตูุฑ
            4. **ุงูุชูุณูู:** ูุฏ ูุชุบูุฑ ุงูุชูุณูู ุงููุนูุฏ ููููุงู ุจุนุฏ ุงูุชุญููู
            
            **ุฃููุงุน ุงููููุงุช ุงููุฏุนููุฉ:**
            - ูููุงุช PDF ููุท (.pdf)
            - ุงูุญุฏ ุงูุฃูุตู ููุญุฌู: 200 ููุฌุงุจุงูุช
            """)
            
        with st.expander("โ ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ"):
            st.markdown("""
            **ุณ: ูู ุงูุจูุงูุงุช ุขููุฉุ**
            ุฌ: ูุนูุ ุฌููุน ุงููููุงุช ุชุชู ูุนุงูุฌุชูุง ูุญููุงู ููุง ูุชู ุญูุธูุง ุนูู ุงูุฎุงุฏู.
            
            **ุณ: ูุง ูู ุฃููุงุน ุงููููุงุช ุงููุฏุนููุฉุ**
            ุฌ: ุญุงููุงู ูุฏุนู ุชุญููู ูููุงุช PDF ุฅูู Word (DOCX) ููุท.
            
            **ุณ: ููุงุฐุง ูุดู ุงูุชุญูููุ**
            ุฌ: ูุฏ ููุดู ุงูุชุญููู ุฅุฐุง ูุงู ุงูููู ุชุงููุงู ุฃู ูุญููุงู ุจูููุฉ ูุฑูุฑ.
            
            **ุณ: ูู ูููู ุชุญููู ูููุงุช ูุญููุฉุ**
            ุฌ: ูุงุ ุงููููุงุช ุงููุญููุฉ ุจูููุฉ ูุฑูุฑ ุบูุฑ ูุฏุนููุฉ ุญุงููุงู.
            """)

    # Footer
    st.markdown("---")
    st.markdown(
        """
        <div style='text-align: center; color: #666; font-size: 0.8em;'>
        ุฃุฏุงุฉ ุชุญููู PDF ุฅูู Word - ุขููุฉ ูุณุฑูุนุฉ
        </div>
        """,
        unsafe_allow_html=True
    )

if __name__ == "__main__":
    main()
